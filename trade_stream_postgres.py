import psycopg2
import websocket
import json
import time
import threading

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL
import os
PG_HOST = os.environ.get("PG_HOST")
PG_PORT = os.environ.get("PG_PORT", 5432)
PG_NAME = os.environ.get("PG_NAME")
PG_USER = os.environ.get("PG_USER")
PG_PASSWORD = os.environ.get("PG_PASSWORD")

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∫–æ—Ç–∏—Ä–æ–≤–æ–∫
new_latest_price = {}

# –ß—Ç–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–∏–º–≤–æ–ª–æ–≤ –∏–∑ PostgreSQL
def load_symbols():
    try:
        conn = psycopg2.connect(
            dbname=PG_NAME,
            user=PG_USER,
            password=PG_PASSWORD,
            host=PG_HOST,
            port=PG_PORT
        )
        cur = conn.cursor()
        cur.execute("SELECT name FROM symbols")
        symbols = [row[0].lower() for row in cur.fetchall()]
        conn.close()
        return symbols
    except Exception as e:
        print("–û—à–∏–±–∫–∞ PostgreSQL –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–∏–º–≤–æ–ª–æ–≤:", repr(e), flush=True)
        return []

def run_trade_stream():
    print("üöÄ PostgreSQL trade_stream –∑–∞–ø—É—â–µ–Ω", flush=True)

    def on_message(ws, message):
        try:
            data = json.loads(message)
            symbol = data['data']['s'].lower()
            price = float(data['data']['p'])
            new_latest_price[symbol] = price
            print(f"[{symbol}] ‚Üí {price}", flush=True)
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", repr(e), flush=True)

    def stream_loop():
        print("üîÅ stream_loop —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª", flush=True)
        while True:
            try:
                symbols = load_symbols()
                print("‚úÖ –°–ø–∏—Å–æ–∫ —Å–∏–º–≤–æ–ª–æ–≤:", symbols, flush=True)
                if not symbols:
                    print("‚ö†Ô∏è –ù–µ—Ç —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏. –ñ–¥—ë–º...", flush=True)
                    time.sleep(10)
                    continue
                streams = [f"{s}@trade" for s in symbols]
                url = "wss://fstream.binance.com/stream?streams=" + "/".join(streams)
                print("üîå URL –ø–æ–¥–ø–∏—Å–∫–∏:", url, flush=True)
                ws = websocket.WebSocketApp(url, on_message=on_message)
                ws.run_forever()
            except Exception as e:
                print("‚ùå –û—à–∏–±–∫–∞ WebSocket:", repr(e), flush=True)
                time.sleep(5)

    threading.Thread(target=stream_loop, daemon=True).start()

if __name__ == "__main__":
    run_trade_stream()
    while True:
        time.sleep(60)